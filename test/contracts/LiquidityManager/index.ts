import { LiquidityManager_positions } from "./positions.test";
import { LiquidityManager_covers } from "./covers.test";
import { LiquidityManager_coverSize } from "./coverSize.test";
import { LiquidityManager_coverPoolId } from "./coverPoolId.test";
import { LiquidityManager_isCoverActive } from "./isCoverActive.test";
import { LiquidityManager_poolInfo } from "./poolInfo.test";
import { LiquidityManager_poolOverlaps } from "./poolOverlaps.test";
import { LiquidityManager_createPool } from "./createPool.test";
import { LiquidityManager_purgeExpiredCoversInPool } from "./purgeExpiredCoversInPool.test";
import { LiquidityManager_buyCover } from "./buyCover.test";
import { LiquidityManager_updateCover } from "./updateCover.test";
import { LiquidityManager_createPosition } from "./createPosition.test";
import { LiquidityManager_increasePosition } from "./increasePosition.test";
import { LiquidityManager_takeInterests } from "./takeInterests.test";
import { LiquidityManager_takeInterestsWithYieldBonus } from "./takeInterestsWithYieldBonus.test";
import { LiquidityManager_commitPositionWithdrawal } from "./commitPositionWithdrawal.test";
import { LiquidityManager_uncommitPositionWithdrawal } from "./uncommitPositionWithdrawal.test";
import { LiquidityManager_closePosition } from "./closePosition.test";
import { LiquidityManager_addClaimToPool } from "./addClaimToPool.test";
import { LiquidityManager_removeClaimFromPool } from "./removeClaimFromPool.test";
import { LiquidityManager_attemptReopenCover } from "./attemptReopenCover.test";
import { LiquidityManager_payoutClaim } from "./payoutClaim.test";
import { LiquidityManager_updateConfig } from "./updateConfig.test";

export async function ClaimManagerTests() {
  LiquidityManager_positions();
  LiquidityManager_covers();
  LiquidityManager_coverSize();
  LiquidityManager_coverPoolId();
  LiquidityManager_isCoverActive();
  LiquidityManager_poolInfo();
  LiquidityManager_poolOverlaps();
  LiquidityManager_createPool();
  LiquidityManager_purgeExpiredCoversInPool();
  LiquidityManager_buyCover();
  LiquidityManager_updateCover();
  LiquidityManager_createPosition();
  LiquidityManager_increasePosition();
  LiquidityManager_takeInterests();
  LiquidityManager_takeInterestsWithYieldBonus();
  LiquidityManager_commitPositionWithdrawal();
  LiquidityManager_uncommitPositionWithdrawal();
  LiquidityManager_closePosition();
  LiquidityManager_addClaimToPool();
  LiquidityManager_removeClaimFromPool();
  LiquidityManager_attemptReopenCover();
  LiquidityManager_payoutClaim();
  LiquidityManager_updateConfig();
}
